- name: Deploy Skynet Webportals
  hosts: webportals
  gather_facts: False

  # Limit concurrency
  serial: 1

  # Stop on first error, do not execute on the next host
  any_errors_fatal: True

  # Load common vars
  vars_files:
  - vars/common.yml

  # Playbook specific vars
  vars:
    max_hosts: "{{ groups['webportals'] | length }}"
    # Rebuild docker services
    docker_compose_build: True
    portal_action: "portal-deploy"

  tasks:

    # Check '--limit' is used
    - name: Fail if you are targeting all dev and prod webportals
      include_tasks: tasks/host-limit-check.yml

    # Check/install Ansible prerequisities
    - name: Include preparing portal prerequisities
      include_tasks: tasks/portals-prepare.yml

    # Disable health check
    - name: Include disabling portal health check
      include_tasks: tasks/portal-health-check-disable.yml
    
    # Stop portal docker services
    - name: Include stopping portal docker services
      include_tasks: tasks/portal-docker-services-stop.yml
    
    # Set portal versions
    - name: Include setting portal versions (portal, skyd, accounts)
      include_tasks: tasks/portal-versions-set.yml

    # Rebuild docker images, start the docker services and log activities
    - name: Include starting portal docker services
      include_tasks: tasks/portal-docker-services-start.yml
    
    # Run portal integration tests
    - name: Include running portal integration tests
      include_tasks: tasks/portal-integration-tests-run.yml

    # Update log status to 'tested'
    - name: Update log status to 'tested'
      include_tasks: tasks/portal-logs-update-status.yml
      vars:
        tag_from: "started"
        tag_to: "tested"
    
    # Enable health check
    - name: Include enabling portal health check
      include_tasks: tasks/portal-health-check-enable.yml