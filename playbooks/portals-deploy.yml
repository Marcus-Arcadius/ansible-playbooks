- name: Get Deploy Hosts for the Current Batch
  hosts: webportals
  gather_facts: False

  # Limit concurrency to keep batch_hosts order deterministic.
  # When you want to deploy in parallel, keep 'serial: 1' for this play,
  # parallel deploys are set by 'serial' variable in the next play.
  serial: 1

  # Stop on first error, do not execute on the next host
  any_errors_fatal: True

  vars:
    max_hosts: "{{ groups['webportals'] | length - 1 }}"

    # Default batch config (one batch with all selected hosts will be created),
    # can be overriden with cli flag --extra-vars/-e
    batch_size: 1
    batch_number: 1

  tasks:
    # Check '--limit' is used
    - name: Fail if you are targeting all dev and prod webportals
      include_tasks: tasks/host-limit-check.yml

    - name: Filter hosts by batch size and batch number
      ansible.builtin.group_by:
        key: batch_hosts
      # add hosts according to batch size and batch number
      # do not add (deploy to) hosts from webportals_takedown group
      when: (ansible_play_hosts_all.index(inventory_hostname) % batch_size == batch_number - 1) and ('webportals_takedown' not in group_names)

- name: Deploy Skynet Webportals to Current Batch Hosts
  hosts: batch_hosts
  remote_user: "{{ webportal_user }}"
  gather_facts: False

  # Limit concurrency
  serial: "{{ parallel_deploys | default(1) }}"

  # Stop on first error, do not execute on the next host
  any_errors_fatal: True

  # Playbook specific vars
  vars:
    # Rebuild docker services
    docker_compose_build: True
    # Set portal, skyd, accounts versions
    set_portal_versions: True
    portal_action: "portal-deploy"

  tasks:
    # Print timestamp
    - name: Print timestamp
      debug:
        msg: "{{ inventory_hostname + ' deployment start: ' + lookup('pipe','date +%Y-%m-%dT%H:%M:%S') + ' UTC' }}"
  
    # Check/install Ansible prerequisities
    - name: Include preparing portal prerequisities
      include_tasks: tasks/portals-prepare.yml

    # Disable health check
    - name: Include disabling portal health check
      include_tasks: tasks/portal-health-check-disable.yml

    # Stop portal docker services
    - name: Include stopping portal docker services
      include_tasks: tasks/portal-docker-services-stop.yml

    # Rebuild docker images, start the docker services and log activities
    - name: Include starting portal docker services
      include_tasks: tasks/portal-docker-services-start.yml

    # Run portal integration tests
    - name: Include running portal integration tests
      include_tasks: tasks/portal-integration-tests-run.yml

    # Include running portal health checks
    - name: Include running portal health checks
      include_tasks: tasks/portal-health-checks-run.yml

    # Update log status to 'tested'
    - name: Update log status to 'tested'
      include_tasks: tasks/portal-logs-update-status.yml
      vars:
        tag_from: "started"
        tag_to: "tested"

    # Enable health check
    - name: Include enabling portal health check
      # do not enable health checks on hosts from out_of_LB group
      when: ('out_of_LB' not in group_names)
      include_tasks: tasks/portal-health-check-enable.yml

    # Get portal status
    - name: Include getting portal status
      include_tasks: tasks/portal-status-get-status.yml

    # Report portal status to Discord
    - name: Include reporting status to Discord
      include_tasks: tasks/portal-status-report-to-discord.yml
