# TODO: Remove 'skynetlabs_devs_email' from:
# - .env.j2
# Review usage (rename) in:
# - webportals.yml
# - hosts.ini
{% set server_domain = webportal_server_config.domain_name %}
{% set cluster_domain = webportal_common_config.portal_cluster_domain %}

###############################################################################
# Notes
#
# Portal server can be part of a single node cluster or a multi-node cluster.
#
# For single node cluster webportal_server_config.domain_name (server_domain)
# can be the same as webportal_common_config.portal_cluster_domain
# (cluster_domain)
#
# For multi-node cluster these should be different, cluster_domain being the
# domain accessed publicly and server_domain(s) being address(es) behing a load
# balancer.

###############################################################################
# Server specific

# A portal domain name
# TODO: Is this stil used somewhere?
DOMAIN_NAME="{{ server_domain }}"

# A (cluster) portal domain
# This is the domain that will be used for generating certificates and nginx
# routing.
PORTAL_DOMAIN="{{ cluster_domain }}"

{% if server_domain != cluster_domain %}
# A server domain if a server is a part of a multi-node cluster, otherwise keep
# unset. This is the domain that will be used for generating certificates and
# nginx routing for cluster server together with PORTAL_DOMAIN.
SERVER_DOMAIN="{{ server_domain }}"

{% endif %}
# A string representing name of your portal e.g. 'my-portal.com' or 'My Awesome
# Skynet Portal' (internal use only)
PORTAL_NAME="{{ webportal_server_config.portal_name }}"

# A list of active portal modules.
# Order in PORTAL_MODULES defines order of loading modules by docker compose.
# Possible choices:
# - 'a': Accounts
# - 'j': Jaeger
# - 'm': MongoDB (when 'a' (i.e. Accounts) are used, this is included automatically)
# Example:
# PORTAL_MODULES="mj"
# or
# PORTAL_MODULES="aj"
PORTAL_MODULES="{{ webportal_server_config.portal_modules }}"

# Absolute url to the server API.
SKYNET_SERVER_API="https://{{ server_domain }}"

# Sia wallet password
SIA_WALLET_PASSWORD="{{ webportal_server_config.sia_wallet_password if (webportal_server_config.sia_wallet_password is defined and webportal_server_config.sia_wallet_password is not none and webportal_server_config.sia_wallet_password != '') else (webportal_server_config.sia_wallet_seed if webportal_server_config.sia_wallet_seed is defined else '') }}"

# (optional) The port on which siad is listening, defaults to 9980.
API_PORT="{{ webportal_server_config.sia_api_port }}"

# Auto generated secure key for your Handshake service integration.
HSD_API_KEY="{{ webportal_server_config.hsd_api_key }}"

###############################################################################
# Common

# Absolute url to the (cluster) portal API.
SKYNET_PORTAL_API="https://{{ cluster_domain }}"

# Administrator contact email.
# Needed for communication regarding SSL certification.
# TODO: Deprecated.
EMAIL_ADDRESS="{{ skynetlabs_devs_email }}"

# (optional) If using Route53 as a DNS loadbalancer.
AWS_ACCESS_KEY_ID="{{ webportal_common_config.aws_access_key}}"

# (optional) If using Route53 as a DNS loadbalancer.
AWS_SECRET_ACCESS_KEY="{{ webportal_common_config.aws_secret_access_key }}"

# (optional) Only required if you're using the Discord notifications
# integration.
# Do not include DISCORD_MENTION_... vars if they are empty, health-checker.py
# script will stop working.
# TODO: Move those to common/cluster configs in LastPass
DISCORD_WEBHOOK_URL="{{ discord_webhook_url | default('') }}"
{% if discord_mention_role_id | default('') != '' %}
DISCORD_MENTION_ROLE_ID="{{ discord_mention_role_id | default('') }}"
{% endif %}
{% if discord_mention_user_id | default('') != '' %}
DISCORD_MENTION_USER_ID="{{ discord_mention_user_id | default('') }}"
{% endif %}

# common path for cluster, single path for each dev server
# S3 backup path.
# For prod servers: "{{ webportal_common_config.s3_backup_path }}"
# For dev servers: "{{ webportal_common_config.s3_backup_path }}_<server hostname>"
S3_BACKUP_PATH="{{ webportal_common_config.s3_backup_path }}{{ '_' + inventory_hostname if 'webportals_prod' not in group_names else '' }}"

# Used to load skylinks blocklist data from Airtable
AIRTABLE_API_KEY="{{ webportal_common_config.airtable_api_key }}"
AIRTABLE_BASE="{{ webportal_common_config.airtable_base }}"
AIRTABLE_TABLE="{{ webportal_common_config.airtable_table }}"
AIRTABLE_FIELD="{{ webportal_common_config.airtable_field }}"

###############################################################################
# MongoDB

# MongoDB username
SKYNET_DB_USER="{{ mongodb_config.skynet_db_user }}"

# MongoDB password
SKYNET_DB_PASS="{{ mongodb_config.skynet_db_pass }}"

# MongoDB address or container name
SKYNET_DB_HOST="mongo"

# MongoDB port
SKYNET_DB_PORT="{{ default_mongo_port }}"

# MongoDB replicaset name
SKYNET_DB_REPLICASET="{{ webportal_common_config.skynet_db_replicaset | default('skynet') }}"

{% if portal_accounts_on %}
###############################################################################
# (optional) Accounts

# Public IP/domain of server used by CoackroachDB
CR_IP="{{ server_domain }}"

# List of servers (with ports) which make up your CockroachDB cluster.
# A server can have a link to itself, so the same string can be used for all
# servers in a cluster.
# For a single server: single-portal.com:26257
# For a cluster: server-1.cluster.com:26257,server-2.cluster.com:26257,server-3.cluster.com:26257
{#
Jinja template dev notes:
- hostvars contain data from all Ansible hosts defined in the Ansible inventory
- Get list of hosts in the same cluster:
  hostvars | dictsort | selectattr('1.portal_cluster_id', 'defined') | selectattr('1.portal_cluster_id', 'equalto', portal_cluster_id)
- Get just domain names from the list:
  map(attribute='1.ansible_host') | list
- Add ports to the list items:
  product('[:26257']) | map('join') | list
#}
CR_CLUSTER_NODES="{{ hostvars | dictsort | selectattr('1.portal_cluster_id', 'defined') | selectattr('1.portal_cluster_id', 'equalto', portal_cluster_id) | map(attribute='1.ansible_host') | list | product([':26257']) | map('join') | list | join(',') }}"

# Absolute url to the (cluster) portal dashboard.
SKYNET_DASHBOARD_URL="https://account.{{ cluster_domain }}"

# Accounts log level
SKYNET_ACCOUNTS_LOG_LEVEL="info"

# Domain to which your cookies will be issued
COOKIE_DOMAIN="{{ cluster_domain }}"

# Cookie hashing secret, at least 32 bytes
COOKIE_HASH_KEY="{{ webportal_common_config.cookie_hash_key }}"

# Cookie encryption key, at least 32 bytes
COOKIE_ENC_KEY="{{ webportal_common_config.cookie_enc_key }}"

# Stripe keys and a secret
STRIPE_PUBLISHABLE_KEY="{{ webportal_common_config.stripe_publishable_key }}"

STRIPE_API_KEY="{{ webportal_common_config.stripe_api_key }}"

STRIPE_SECRET_KEY="{{ webportal_common_config.stripe_secret_key }}"

STRIPE_WEBHOOK_SECRET="{{ webportal_common_config.stripe_webhook_secret }}"

{% endif %}
# TODO: Add serverlist script vars
# TODO: Once serverlist vars are added to this template update
# x-portals-setup-serverlist.yml not to check mark, but var name(s)
