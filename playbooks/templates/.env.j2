# Review usage (rename) in:
# - webportals.yml
# - hosts.ini
#
# REQUIRED: domain_name and portal_cluster_domain need to be defined by user
{% set server_domain = webportal_server_config.domain_name %}
{% set cluster_domain = webportal_common_config.portal_cluster_domain %}

###############################################################################
# Notes
#
# Portal server can be part of a single node cluster or a multi-node cluster.
#
# For single node cluster webportal_server_config.domain_name (server_domain)
# can be the same as webportal_common_config.portal_cluster_domain
# (cluster_domain)
#
# For multi-node cluster these should be different, cluster_domain being the
# domain accessed publicly and server_domain(s) being address(es) behing a load
# balancer.
#
# Defaults are set in group_vars/webportals.yml
#
###############################################################################
# Server specific

# A (cluster) portal domain
# This is the domain that will be used for generating certificates and nginx
# routing.
#
# REQUIRED: See top of file 
PORTAL_DOMAIN={{ cluster_domain }}

# This is the domain that will be used for generating certificates and nginx
# routing for cluster server together with PORTAL_DOMAIN. This domain is also
# used by Blocker module.
#
# REQUIRED: See top of file 
SERVER_DOMAIN={{ server_domain }}

# A string representing name of your portal e.g. 'my-portal.com' or 'My Awesome
# Skynet Portal' (internal use only)
#
# REQUIRED: Manually defined by user 
PORTAL_NAME={{ webportal_server_config.portal_name }}

# Sia api password and server uid. 
#
# REQUIRED: manually defined by user, or Ansible automatically generated 
SIA_API_PASSWORD={{ webportal_server_config.sia_api_password }}
SERVER_UID={{ webportal_server_config.server_uid }}

# A list of active portal modules.
# Order in PORTAL_MODULES defines order of loading modules by docker compose.
# Possible choices:
# - 'a': Accounts (https://github.com/SkynetLabs/skynet-accounts)
# - 'b': Blocker (https://github.com/SkynetLabs/blocker)
# - 'j': Jaeger
# - 'm': MongoDB (when 'a' (i.e. Accounts) are used, this is included automatically)
# - 's': Malware Scanner (https://github.com/SkynetLabs/malware-scanner)
# - 'u': Abuse Scanner (https://github.com/SkynetLabs/abuse-scanner)
# Example:
# PORTAL_MODULES=mj
# or
# PORTAL_MODULES=aj
#
# REQUIRED: manually defined by user, default is mongo
PORTAL_MODULES={{ webportal_server_config.portal_modules }}

# Absolute url to the server API.
#
# REQUIRED: See top of file 
SKYNET_SERVER_API=https://{{ server_domain }}

# Sia wallet password
#
# REQUIRED: Ansible automatically generated 
SIA_WALLET_PASSWORD={{ webportal_server_config.sia_wallet_password if (webportal_server_config.sia_wallet_password is defined and webportal_server_config.sia_wallet_password is not none and webportal_server_config.sia_wallet_password != '') else (webportal_server_config.sia_wallet_seed if webportal_server_config.sia_wallet_seed is defined else '') }}

# The port on which siad is listening, defaults to 9980. 
#
# REQUIRED: manually defined by user, or default will be used
API_PORT={{ webportal_server_config.sia_api_port }}

# Auto generated secure key for your Handshake service integration.
#
# REQUIRED: Ansible automatically generated 
HSD_API_KEY={{ webportal_server_config.hsd_api_key }}

###############################################################################
# Common

# Absolute url to the (cluster) portal API.
#
# REQUIRED: See top of file 
SKYNET_PORTAL_API=https://{{ cluster_domain }}

# Administrator contact email.
# Needed for communication regarding SSL certification.
# TODO: Check if it is used (by Zero SSL) or it is deprecated.
EMAIL_ADDRESS={{ ssl_support_email }}

# Used for AWS Route53 as a DNS loadbalancer.
#
# OPTIONAL: manually defined by user, can be blank
AWS_ACCESS_KEY_ID={{ webportal_common_config.aws_access_key | default('') }}
AWS_SECRET_ACCESS_KEY={{ webportal_common_config.aws_secret_access_key | default('') }}

# Used for Discord notifications integration.
# Do not include DISCORD_MENTION_... vars if they are empty, health-checker.py
# script will stop working.
# TODO: Move those to common/cluster configs in LastPass
#
# OPTIONAL: manually defined by user, can be blank
DISCORD_WEBHOOK_URL={{ discord_webhook_url | default('') }}
{% if discord_mention_role_id | default('') != '' %}
DISCORD_MENTION_ROLE_ID={{ discord_mention_role_id | default('') }}
{% endif %}
{% if discord_mention_user_id | default('') != '' %}
DISCORD_MENTION_USER_ID={{ discord_mention_user_id | default('') }}
{% endif %}

# common path for cluster, single path for each dev server
# S3 backup path.
# For prod servers: {{ webportal_common_config.s3_backup_path }}
# For dev servers: {{ webportal_common_config.s3_backup_path }}_<server hostname>
#
# OPTIONAL: manually defined by user, can be blank
S3_BACKUP_PATH={{ webportal_common_config.s3_backup_path }}{{ '_' + inventory_hostname if 'webportals_prod' not in group_names else '' }}

# Used to load skylinks blocklist data from Airtable
#
# OPTIONAL: manually defined by user, can be blank
AIRTABLE_API_KEY={{ webportal_common_config.airtable_api_key | default('') }}
AIRTABLE_BASE={{ webportal_common_config.airtable_base | default('') }}
AIRTABLE_TABLE={{ webportal_common_config.airtable_table | default('') }}
AIRTABLE_FIELD={{ webportal_common_config.airtable_field | default('') }}

###############################################################################
# MongoDB

# MongoDB username
#
# REQUIRED: manually defined by user, or default will be used
SKYNET_DB_USER={{ mongodb_config.skynet_db_user }}

# MongoDB password
#
# REQUIRED: manually defined by user, or Ansible automatically generated 
SKYNET_DB_PASS={{ mongodb_config.skynet_db_pass }}

# MongoDB address or container name
#
# REQUIRED: manually defined by user, or default will be used
SKYNET_DB_HOST={{ mongodb_config.skynet_db_host }}

# MongoDB port
#
# REQUIRED: manually defined by user, or default will be used
SKYNET_DB_PORT={{ mongodb_config.skynet_db_port }}

# MongoDB replicaset name
#
# REQUIRED: manually defined by user, or default will be used
SKYNET_DB_REPLICASET={{ webportal_common_config.skynet_db_replicaset }}

{% if portal_accounts_on %}
###############################################################################
# (optional) Accounts

# Absolute url to the (cluster) portal dashboard.
#
# REQUIRED: See top of file 
SKYNET_DASHBOARD_URL=https://account.{{ cluster_domain }}

# Accounts log level
#
# REQUIRED: manually defined by user, or default will be used
SKYNET_ACCOUNTS_LOG_LEVEL={{ webportal_common_config.accounts_log_level }}

{% if webportal_common_config.accounts_limit_access is defined %}
# Accounts limit access to authenticated users
# Possible values:
# - 'authenticated': Only authenticated users can access the portal. This is
#   the default value set by skynet-webportal/docker-compose.accounts.yml if
#   this variable is empty or undefined.
# - 'false': All users incl. anonymous users can access the portal (access to portal is public)
# REQUIRED: manually defined by user, or default is set in docker-compose file
ACCOUNTS_LIMIT_ACCESS={{ webportal_common_config.accounts_limit_access }}

{% endif %}
# Accounts email
# REQUIRED: manually defined by user
ACCOUNTS_EMAIL_URI={{ webportal_common_config.accounts_email_uri }}

# Domain to which your cookies will be issued
#
# REQUIRED: See top of file 
COOKIE_DOMAIN={{ cluster_domain }}

# Cookie hashing secret, at least 32 bytes
#
# REQUIRED: manually defined by user, or Ansible automatically generated 
COOKIE_HASH_KEY={{ webportal_common_config.cookie_hash_key }}

# Cookie encryption key, at least 32 bytes
#
# REQUIRED: manually defined by user, or Ansible automatically generated 
COOKIE_ENC_KEY={{ webportal_common_config.cookie_enc_key }}

# Stripe keys and a secret
#
# OPTIONAL: manually defined by user, can be blank
STRIPE_PUBLISHABLE_KEY={{ webportal_common_config.stripe_publishable_key | default('') }}
STRIPE_API_KEY={{ webportal_common_config.stripe_api_key | default('') }}
STRIPE_SECRET_KEY={{ webportal_common_config.stripe_secret_key | default('') }}
STRIPE_WEBHOOK_SECRET={{ webportal_common_config.stripe_webhook_secret | default('') }}

{% endif %}
{% if portal_blocker_on %}
###############################################################################
# (optional) Blocker

# REQUIRED: Hardcoded, not configurable
API_HOST=10.10.10.10
SKYNET_ACCOUNTS_HOST=10.10.10.70
SKYNET_ACCOUNTS_PORT=3000
BLOCKER_HOST=blocker
BLOCKER_PORT=4000

# Sia api password. 
#
# REQUIRED: manually defined by user, or Ansible automatically generated 
SIA_API_PASSWORD={{ webportal_server_config.sia_api_password }}

# REQUIRED: manually defined by user, or default will be used
BLOCKER_LOG_LEVEL={{ webportal_common_config.blocker_log_level }}

# OPTIONAL: manually defined by user, can be blank
BLOCKER_NGINX_CACHE_PURGE_LIST={{ webportal_common_config.blocker_nginx_cache_purge_list | default('') }}
BLOCKER_NGINX_CACHE_PURGE_LOCK={{ webportal_common_config.blocker_nginx_cache_purge_lock | default('') }}

{% endif %}
{% if portal_abuse_scanner_on %}
###############################################################################
# (optional) Abuse Scanner

# Email address to scan
#
# REQUIRED: manually defined by user
EMAIL_SERVER={{ webportal_common_config.abuse_email_server }}
EMAIL_USERNAME={{ webportal_common_config.abuse_email_username }}
EMAIL_PASSWORD={{ webportal_common_config.abuse_email_password }}

# Email address to send reports to
#
# REQUIRED: manually defined by user
ABUSE_MAILADDRESS={{ webportal_common_config.abuse_mailaddress }}

# REQUIRED: Hardcoded, not configurable
ABUSE_SPONSOR="Abuse Scanner"
ABUSE_MAILBOX="Abuse Scanner"

# REQUIRED: manually defined by user or default will be used
ABUSE_LOG_LEVEL={{ webportal_common_config.abuse_log_level }}

{% endif %}
# TODO: Add serverlist script vars
# TODO: Once serverlist vars are added to this template update
# x-portals-setup-serverlist.yml not to check mark, but var name(s)
