- name: Setup Portal by user
  hosts: webportals
  remote_user: "{{ webportal_user }}"
  gather_facts: True
  serial: 1              # Limit concurrency
  any_errors_fatal: True # Stop on first error, do not execute on the next host
  vars:                  # Playbook specific vars
    max_hosts: "{{ groups['webportals'] | length - 1 }}"
    lastpass_required: True
    portal_action: "portal-setup"

  tasks:
    
    - name: Check '--limit' is used
      include_tasks: tasks/host-limit-check.yml
    
    - name: Check supported OS and version
      assert:
        that:
          - ansible_distribution|lower == 'debian' and ansible_distribution_version == '10'
        fail_msg: "{{ ansible_distribution }} {{ ansible_distribution_version }} is not yet supported by this role"

    - name: Include basic security setup
      include_tasks: tasks/basic-security-setup.yml
      args:
        apply:
          become: True
    
    - name: Include firewall setup
      include_tasks: tasks/portal-firewall-ufw-setup.yml
      args:
        apply:
          become: True
    
    - name: Include server setup
      include_tasks: tasks/portal-setup-server.yml
    




    # TODO
    # - setup-server.sh
    #   - tmux
    #   - bashrc
    #   - sudo apt-get -y install ufw tmux ranger htop nload gcc g++ make git vim unzip curl awscli
    #   - terminfo for alacritty
    # - Setting up Portal
    #   - Step 2: Set up the environment (optional)
    # - log ansible version




    
    # Setup environment (dotfiles) and dev tools
    - block:
        
        # Setup environment (dotfiles)

        - name: Set dotfiles git dir
          set_fact:
            dotfiles_git_dir: "{{ webportal_user_home_dir }}/.dotfiles.git"
        
        - name: Delete dotfile git directory
          ansible.builtin.file:
            path: "{{ dotfiles_git_dir }}"
            state: absent
        
        - name: Set dotfiles git temporary directory
          set_fact:
            dotfiles_git_tmp_dir: "{{ webportal_user_home_dir }}/dotfilegit-tmp"
        
        - name: Checkout SkynetLabs dotfiles
          ansible.builtin.git:
            repo: "{{ dotfiles_repo_url }}"
            dest: "{{ dotfiles_git_tmp_dir }}"
            version: init
            separate_git_dir: "{{ dotfiles_git_dir }}"
            force: True
        
        - name: Delete dotfile git temporary directory
          ansible.builtin.file:
            path: "{{ dotfiles_git_tmp_dir }}"
            state: absent
        
        - name: Set dotfiles command
          set_fact:
            dotfiles_command: /usr/bin/git --git-dir={{ dotfiles_git_dir }} --work-tree={{ webportal_user_home_dir }}
        
        - name: Config dotfiles
          command: "{{ dotfiles_command }} config status.showUntrackedFiles no"
        
        - name: Load dotfiles to user home
          command: "{{ dotfiles_command }} reset --hard HEAD"
        
        # Setup dev tools

        - name: Run apt-get update
          apt:
            update_cache: yes
            cache_valid_time: 900
          become: True
        
        - name: Install dev tools
          apt:
            name: "{{ item }}"
            state: latest
          loop:
            - tmux
            - screen
            - ranger
            - htop
            - nload
            - gcc
            - g++
            - make
            - vim
            - unzip
            - curl
            - awscli
          become: True
        
        # Setup terminfo for alacritty terminal via ssh

        - name: Download alacritty.info
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/alacritty/alacritty/master/extra/alacritty.info
            dest: "{{ webportal_user_home_dir }}/alacritty.info"
            force: True
        
        - name: Compile allacrity
          ansible.builtin.command:
            cmd: tic -xe alacritty,alacritty-direct alacritty.info
            chdir: "{{ webportal_user_home_dir }}"
          become: True
        
        - name: Remove alacritty.info
          ansible.builtin.file:
            path: "{{ webportal_user_home_dir }}/alacritty.info"
            state: absent

      when: webportal_setup_dotfiles_and_dev_tools
      
    - name: Include role to setup Skynet Webportal
      include_role:
        name: skynetlabs.skynet_webportal
      vars:
        load_portal_config_handler: "tasks/lastpass-load-webportal-config.yml"
        save_portal_config_handler: "tasks/lastpass-save-webportal-config.yml"
    
    # xxx remove these after moved to role
    - set_fact:
        load_portal_config_handler: "tasks/lastpass-load-webportal-config.yml"
    - set_fact:
        save_portal_config_handler: "tasks/lastpass-save-webportal-config.yml"
    - name: xxx include role task
      include_tasks: tasks/portal-role-task.yml

  handlers:
    
    - import_tasks: handlers/main.yml