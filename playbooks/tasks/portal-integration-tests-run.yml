---

- name: Include getting skynet-js repository latest valid semver version
  include_tasks: tasks/portal-skynet-js-repo-get-latest-version.yml

# Run integration tests locally against webportal
- name: Run integration tests
  block:

    # Checkout skynet-js repo locally
    # NOTE: Each portal server has its own repo directory so the tests of
    # different portals do not clash when they are executed in parallel.
    - name: Checkout skynet-js repo
      local_action:
        module: ansible.builtin.git
        repo: "{{ skynet_js_repo_url }}"
        dest: "{{ local_temp_skynetlabs_git_repos_skynet_js }}/{{ inventory_hostname }}"
        version: "{{ skynet_js_latest_version }}"
        update: True
        force: True

    - name: Get authentication cookie
      ansible.builtin.command: docker exec health-check cli __authenticate
      # Handle error until health checks are updated to support authentication
      ignore_errors: True
      register: auth_cookie_result

    - name: Set authentication cookie
      set_fact:
        auth_cookie: "{{ (auth_cookie_result.stdout | trim) if (auth_cookie_result.failed | default(False) == False) else '' }}"

    # Run integration tests locally against the portal
    # NOTE: Container name should be unique between portals so that portal
    # tests can be executed in parallel.
    - name: Run integration tests locally against the portal
      local_action:
        module: community.docker.docker_container
        name: skynet-js-integration-tests-{{ inventory_hostname }}
        image: "{{ skynet_js_docker_test_image }}"
        container_default_behavior: no_defaults
        state: started
        detach: False
        volumes:
          - "{{ local_temp_skynetlabs_git_repos_skynet_js }}:/skynet-js"
        env:
          SKYNET_JS_INTEGRATION_TEST_SERVER: "https://{{ ansible_host }}"
          SKYNET_JS_INTEGRATION_TEST_CUSTOM_COOKIE: "{{ auth_cookie }}"
        working_dir: "/skynet-js/{{ inventory_hostname }}"
        command: /bin/sh -c 'yarn && yarn run jest integration'
  
  always:
    
    # Remove test container
    - name: Remove test container
      local_action:
        module: community.docker.docker_container
        name: skynet-js-integration-tests-{{ inventory_hostname }}
        container_default_behavior: no_defaults
        state: absent