---
# Take portal out of load balancer by stopping health check

# Check if the health check container is running.
- name: Check health check container is running
  community.docker.docker_container_info:
    name: health-check
  register: health_check_docker_container_result

# Marker the health check as disabled via the cli command
- name: Stop portal health check to take portal out of load balancer
  # NOTE: portal_action is defined by the playbook, i.e. for deploys,
  # portal_action='portal-deploy'
  command: 'docker exec health-check cli disable "{{ out_of_lb_message | default(portal_action) }}"'
  # Only execute the CLI command if the container is up and running. Otherwise,
  # if it is not up and running, it is practically disabled.
  when: health_check_docker_container_result.exists and health_check_docker_container_result.container is defined and health_check_docker_container_result.container.State.Running

# Wait 5 minutes for any small uploads to finish. After 5 minutes, it is likely
# that it is a large upload in which case it is safe to take the server down as
# the large upload will continue on another server.
- name: "Wait for uploads to finish"
  ansible.builtin.command: docker exec sia siac renter uploads
  register: docker_renter_uploads
  # Wait until 'No files are uploading.' is found in the stdout.
  until: docker_renter_uploads.stdout.find("No files are uploading.") != -1
  # Retry every 5 seconds for portal_upload_num_retries, in prod this is 60
  # times which is where the 5 minutes is determined in the above comment.
  delay: 5
  retries: "{{ portal_upload_num_retries }}"
