---
# Enable portal health check to add portal to load balancer

- name: Check health check container is running
  community.docker.docker_container_info:
    name: health-check
  register: health_check_docker_container_result
  # If the container is not up and running, fail here so that it is clear the
  # reason for the failure is the docker container and not the cli command.
  failed_when: >-
    (health_check_docker_container_result.exists is not defined) or
    (health_check_docker_container_result.container is not defined) or
    (not health_check_docker_container_result.container.State.Running)

- name: Get fresh hardware facts (incl. disk usage)
  ansible.builtin.setup:
    gather_subset:
      - "!all"
      - "!any"
      - hardware

- name: Set low disk space flag
  set_fact:
    # Expects webportal data to be stored on "/" mount disk
    low_disk_space: "{{ ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='size_available') | first | int < portal_health_check_disable_free_disk_space_limit_bytes | int }}"

- block:
    - name: Update log status to 'tested-disabled'
      include_tasks: tasks/portal-logs-update-status.yml
      vars:
        tag_from: "tested"
        tag_to: "tested-disabled"

    - name: Disable portal health check to keep portal out of load balancer
      command: docker exec health-check cli disable 'critical free disk space'
  when: low_disk_space

- name: Enable portal health check to add portal to load balancer
  command: docker exec health-check cli enable
  when: not low_disk_space
