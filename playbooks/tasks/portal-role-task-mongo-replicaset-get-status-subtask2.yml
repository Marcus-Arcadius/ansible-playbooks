---

# Check if MongoDB replicaset is online and find primary node in the
# replicaset (subtask to loop over)
# TODO: This ansible playbook task, should be moved to portal role

# Notes:
# - This task file is expected to be called in a loop over MongoDB replicaset
#   member hosts with loop item variable {{ host_item }}.
# - These tasks should be generally delegated to {{ host_item }} host, not run
#   on the current Ansible host that we are handling.
# - For subcrap testing we must set ansible_port according to the subcrap host.

# Search for MongoDB primary host until you find it

- name: Check that mongo container is running
  community.docker.docker_container_info:
    name: mongo
  delegate_to: "{{ host_item }}"
  vars:
    ansible_port: "{{ hostvars[host_item].ansible_port | default(default_ssh_port) }}"
  register: mongo_container_result
  ignore_unreachable: True

- name: Set mongo container running correctly flag
  set_fact:
    mongo_container_ok: >-
      {{ not mongo_container_result.unreachable | default(False) and
      mongo_container_result.exists | default(False) and
      mongo_container_result.container.State.Running and
      not mongo_container_result.container.State.Restarting }}

- name: Include getting mongo replicaset primary member
  include_tasks: tasks/portal-role-task-mongo-shell-eval-on-delegated-host.yml
  vars:
    mongodb_shell_delegated:
      host: "{{ host_item }}"
      eval: "rs.status().members.forEach(m => {if (m.stateStr == 'PRIMARY') {print(m.name)}})"
      ignore_errors: True
  register: mongo_getting_primary_result
  when: mongo_container_ok

- name: Set mongo primary host
  set_fact:
    mongo_primary_host: "{{ item }}"
  when: >-
    not (mongo_getting_primary_result.skipped | default(False)) and
    not (mongo_shell_delegated_result.failed | default(False)) and
    hostvars[item].ansible_host + ':' + (hostvars[item].subcrap_mongo_port | default(default_mongo_port | string)) == mongo_shell_delegated_result.transformed_output
  loop: "{{ mongo_cluster_hosts }}"

- name: Set mongo replicaset is online
  set_fact:
    mongo_replicaset_online: >-
      {{ mongo_replicaset_online | default(False) or
      (not (mongo_getting_primary_result.skipped | default(False)) and
      not (mongo_shell_delegated_result.failed | default(False)))}}

- name: Increment mongo not ok count
  set_fact:
    mongo_not_ok_count: "{{ mongo_not_ok_count | int + 1 }}"
  # Increment on other delegated host_items only, not on the host itself
  when: not mongo_container_ok and host_item != inventory_hostname
