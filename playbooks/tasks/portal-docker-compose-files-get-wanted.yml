---
# Get present docker-compose files

- name: Create list with mandatory docker-compose files
  set_fact:
    webportal_docker_compose_files_wanted: "{{ webportal_docker_compose_files_mandatory }}"

# Get PORTAL_MODULES from .env file
# If PORTAL_MODULES is not defined in .env, this task returns empty string,
# which is our default value same as if PORTAL_MODULES=''.

- name: Get PORTAL_MODULES from .env file
  ansible.builtin.shell: ". {{ webportal_dir }}/.env && echo $PORTAL_MODULES"
  register: portal_modules_result

- name: Set portal modules var
  set_fact:
    portal_modules: "{{ portal_modules_result.stdout }}"

- name: Set flag for accounts module
  set_fact:
    accounts_on: "{{ 'a' in portal_modules }}"

- name: Set flag for Jaeger module
  set_fact:
    jaeger_on: "{{ 'j' in portal_modules }}"

- name: Check webportal_docker_compose_files_dict contains all wanted portal modules
  assert:
    that:
      - "'{{ item }}' in {{ webportal_docker_compose_files_dict }}"
    fail_msg: "Module {{ item }} is not defined in webportal_docker_compose_files_dict"
  loop: "{{ portal_modules | list }}"

# Add optional docker-compose files defined by PORTAL_MODULES
# See https://github.com/SkynetLabs/skynet-webportal/blob/master/dc

- name: Add accounts docker-compose files
  set_fact:
    webportal_docker_compose_files_wanted: >-
      {{ webportal_docker_compose_files_wanted +
      [webportal_docker_compose_files_dict['m'], webportal_docker_compose_files_dict['a']] }}
  when: "'a' in portal_modules"

- name: Add blocker docker-compose files
  set_fact:
    webportal_docker_compose_files_wanted: >-
      {{ webportal_docker_compose_files_wanted +
      [webportal_docker_compose_files_dict['m'], webportal_docker_compose_files_dict['b']] }}
  when: "'b' in portal_modules"

- name: Add jaeger docker-compose file
  set_fact:
    webportal_docker_compose_files_wanted: >-
      {{ webportal_docker_compose_files_wanted +
      [webportal_docker_compose_files_dict['j']] }}
  when: "'j' in portal_modules"

- name: Add malware-scanner docker-compose files
  set_fact:
    webportal_docker_compose_files_wanted: >-
      {{ webportal_docker_compose_files_wanted +
      [webportal_docker_compose_files_dict['b'], webportal_docker_compose_files_dict['m'], webportal_docker_compose_files_dict['s']] }}
  when: "'s' in portal_modules"

- name: Add pinner docker-compose files
  set_fact:
    webportal_docker_compose_files_wanted: >-
      {{ webportal_docker_compose_files_wanted +
      [webportal_docker_compose_files_dict['m'], webportal_docker_compose_files_dict['p']] }}
  when: "'p' in portal_modules"

- name: Add mongo docker-compose file
  set_fact:
    webportal_docker_compose_files_wanted: >-
      {{ webportal_docker_compose_files_wanted +
      [webportal_docker_compose_files_dict['m']] }}

- name: Add Abuse docker-compose file
  block:
    # Abuse docker-compose file was renamed in skynet-webportal repository, for
    # backwards compatibility the playbook will automatically select the file
    # that is present.

    - name: Check which Abuse docker-compose file is present
      ansible.builtin.stat:
        path: "{{ webportal_dir }}/{{ item }}"
        get_attributes: False
        get_checksum: False
        get_mime: False
      register: abuse_files_stat_result
      loop: "{{ webportal_docker_compose_files_dict['u'] }}"

    - name: Reset Abuse docker-compose files count
      set_fact:
        abuse_files: 0

    - name: Count Abuse docker-compose files
      set_fact:
        abuse_files: "{{ abuse_files + 1 }}"
      when: abuse_files_stat_result.results[loop_index].stat.exists
      loop: "{{ webportal_docker_compose_files_dict['u'] }}"
      loop_control:
        index_var: loop_index

    - name: Check there is exactly 1 Abuse docker-compose file
      ansible.builtin.assert:
        that:
          - "{{ abuse_files }} == 1"
        fail_msg: |
          There must be exactly 1 present Abuse docker-compose file.
          Got {{ abuse_files }} present Abuse files.

    - name: Add present Abuse docker-compose file
      set_fact:
        webportal_docker_compose_files_wanted: >-
          {{ webportal_docker_compose_files_wanted +
          [webportal_docker_compose_files_dict['m'], webportal_docker_compose_files_dict['b'], item] }}
      when: abuse_files_stat_result.results[loop_index].stat.exists
      loop: "{{ webportal_docker_compose_files_dict['u'] }}"
      loop_control:
        index_var: loop_index
  when: "'u' in portal_modules"

- name: Add docker-compose.override.yml file to the list
  set_fact:
    webportal_docker_compose_files_wanted: "{{ webportal_docker_compose_files_wanted + ['docker-compose.override.yml'] }}"

- name: List all wanted docker compose files
  debug:
    msg: "Ordered list of wanted docker-compose files:\n{{ webportal_docker_compose_files_wanted }}"
