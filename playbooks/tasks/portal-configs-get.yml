---

# Get portal configs
# - Load portal configs from secrets backend (e.g. LastPass)
# - Set default values (for unset keys)
# - Set mongodb flag
# - Set mongodb config (if mongodb is on)
# - Set accounts flag
# - Set blocker flag
# - Set abuse flag

- name: Include loading portal config
  include_tasks: "{{ playbook_dir }}/{{ load_portal_config_handler }}"

# If the server config hasn't been yet saved to secrets backend, it is loaded
# as undefined now and we set it to empty dictionary.
- name: Set portal config to empty (if it hasn't yet been saved to secrets backend)
  set_fact:
    webportal_server_config: "{{ webportal_server_config | default({}) }}"

- name: Set portal config missing variables to default values
  set_fact:
    webportal_server_config: "{{ webportal_server_config | combine({item.key: item.value}) }}"
  when: webportal_server_config[item.key] is not defined
  loop: "{{ webportal_server_config_defaults | dict2items }}"
  no_log: True

# Get MongoDB config
# NOTE: Server config preference:
# Some MongoDB configuration can be set at common (cluster) level or at
# server level (e.g. db user, db password). For these we prefer server
# config over common (cluster) config.

- name: Set MongoDB config keys with preference of server config over common config
  set_fact:
    mongodb_config_keys_server_preference:
      - skynet_db_user
      - skynet_db_pass

- name: Set MongoDB config with preference of server config over common config
  set_fact:
    mongodb_config: "{{ mongodb_config | default({}) | combine({item: webportal_server_config[item] | default(webportal_common_config[item]) }) }}"
  no_log: True
  ignore_errors: True
  register: mongodb_config_server_preference_result
  loop: "{{ mongodb_config_keys_server_preference }}"

# Fail if not ok
- name: Fail if there are missing MongoDB config items
  fail:
    msg: |
      Portal configuration error for MongoDB:

      For MongoDB you must configure all of the following items
      in server or common config:

      Items with server config preference (over common config):
      {% for key in mongodb_config_keys_server_preference %}
      - {{ key }}
      {% endfor %}
  failed_when: mongodb_config_server_preference_result.failed | default(False)

- name: Set Accounts flag
  set_fact:
    portal_accounts_on: >-
      {{ webportal_server_config.portal_modules is defined and
      webportal_server_config.portal_modules is not none and
      'a' in webportal_server_config.portal_modules }}

- name: Set Blocker flag
  set_fact:
    portal_blocker_on: >-
      {{ webportal_server_config.portal_modules is defined and
      webportal_server_config.portal_modules is not none and
      'b' in webportal_server_config.portal_modules }}

- name: Set Abuse Scanner flag
  set_fact:
    portal_abuse_scanner_on: >-
      {{ webportal_server_config.portal_modules is defined and
      webportal_server_config.portal_modules is not none and
      'u' in webportal_server_config.portal_modules }}
