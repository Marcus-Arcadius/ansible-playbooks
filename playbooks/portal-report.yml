- name: Create report of all servers
  hosts: webportals
  remote_user: "{{ webportal_user }}"
  gather_facts: False
  vars:
    max_hosts: 1

  tasks:
    # - name: Request /renter
    #   ansible.builtin.uri:
    #     url: "http://10.10.10.10:9980/renter"
    #     http_agent: "Sia-Agent"
    #   register: renter_result

    # - name: Print renter result
    #   debug:
    #     msg: |
    #       k:
    #       {{ renter_result.json.keys() }}
          
    #       s:
    #       {{ renter_result.json.settings | to_nice_yaml }}

    #       fm:
    #       renter_result.json.financialmetrics | to_nice_yaml

    #       cp:
    #       {{ renter_result.json.currentperiod | to_nice_yaml }}

    #       np:
    #       {{ renter_result.json.nextperiod | to_nice_yaml }}

    #       ms:
    #       {{ renter_result.json.memorystatus | to_nice_yaml }}

    - name: Request /skynet/stats
      ansible.builtin.uri:
        url: "http://10.10.10.10:9980/skynet/stats"
        http_agent: "Sia-Agent"
      register: skynet_stats_result

    - name: Get skynet stats data
      set_fact:
        # Files
        numfiles: "{{ skynet_stats_result.json.numfiles }}"
        # xxxqqq storage?
        storage: "{{ skynet_stats_result.json.storage }}"
        # Downloads
        # xxxqqq is this download?
        streambufferread15mp99ms: "{{ skynet_stats_result.json.streambufferread15mp99ms }}"
        streambufferread15mp999ms: "{{ skynet_stats_result.json.streambufferread15mp999ms }}"
        streambufferread15mp9999ms: "{{ skynet_stats_result.json.streambufferread15mp9999ms }}"
        # Uploads
        # xxxqqq which to get base/chunk?
        basesectorupload15mp99ms: "{{ skynet_stats_result.json.basesectorupload15mp99ms }}"
        basesectorupload15mp999ms: "{{ skynet_stats_result.json.basesectorupload15mp999ms }}"
        basesectorupload15mp9999ms: "{{ skynet_stats_result.json.basesectorupload15mp9999ms }}"
        chunkupload15mp99ms: "{{ skynet_stats_result.json.chunkupload15mp99ms }}"
        chunkupload15mp999ms: "{{ skynet_stats_result.json.chunkupload15mp999ms }}"
        chunkupload15mp9999ms: "{{ skynet_stats_result.json.chunkupload15mp9999ms }}"
        # Registry reads
        registryread15mp99ms: "{{ skynet_stats_result.json.registryread15mp99ms }}"
        registryread15mp999ms: "{{ skynet_stats_result.json.registryread15mp999ms }}"
        registryread15mp9999ms: "{{ skynet_stats_result.json.registryread15mp9999ms }}"
        # Registry writes
        registrywrite15mp99ms: "{{ skynet_stats_result.json.registrywrite15mp99ms }}"
        registrywrite15mp999ms: "{{ skynet_stats_result.json.registrywrite15mp999ms }}"
        registrywrite15mp9999ms: "{{ skynet_stats_result.json.registrywrite15mp9999ms }}"

    - name: Print files result
      debug:
        msg: |
          nf:
          {{ numfiles }}

    - name: Aggregate over all servers
      set_fact:
        total_num_files: "{{ total_num_files | default(0) | int + hostvars[item].numfiles | int }}"
        total_storage: "{{ total_storage | default(0) | int + hostvars[item].storage | int }}"
      loop: "{{ ansible_play_hosts }}"
      run_once: True

    - name: Print total files result
      debug:
        msg: |
          Total number of files:
            {{ total_num_files }}
            {{ total_num_files | int / 1000000 }} million
          Total storage:
            {{ total_storage }} bytes
            {{ total_storage | int / (1024 * 1024 * 1024) }} GB
            {{ total_storage | int / (1024 * 1024 * 1024 * 1024) }} TB
      run_once: True