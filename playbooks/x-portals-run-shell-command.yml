# This playbook expects set `shell_commands` list of commands.
# E.g. in a file `my-vars/shell-commands.yml` with content (quotes around each
# command are optional, but sometimes needed to fix Yaml issues):
# ```
# shell_commands:
#   - "echo abc > abc.txt"
#   - "docker exec <...>"
# ```
#
# Execute the playbook this way:
# ````
# scripts/x-portals-run-shell-command.sh -e @my-vars/shell-commands.yml --limit dev1
# ```

- name: Run Shell Command(s) Against Skynet Webportals
  hosts: webportals
  remote_user: "{{ webportal_user }}"
  gather_facts: False

  # Limit concurrency
  serial: 1

  # Stop on first error, do not execute on the next host
  any_errors_fatal: True

  # Playbook specific vars
  vars:
    max_hosts: "{{ groups['webportals'] | length - 1 }}"

  tasks:
    # Check '--limit' is used
    - name: Fail if you are targeting all dev and prod webportals
      include_tasks: tasks/host-limit-check.yml

    - name: Run shell command(s)
      ansible.builtin.shell: "{{ item }}"
      loop: "{{ shell_commands }}"
      register: shell_commands_result

    - name: Log shell command(s) output
      debug:
        msg: |
          command:
          {{ item.cmd }}

          stdout:
          {{ item.stdout }}
      loop: "{{ shell_commands_result.results }}"
      loop_control:
        label: "{{ item.cmd }}"
